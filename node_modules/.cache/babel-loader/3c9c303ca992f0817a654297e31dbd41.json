{"ast":null,"code":"const mergeWith = require(\"lodash/mergeWith\");\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\nfunction isString(value) {\n  return typeof value === \"string\";\n}\n\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\n\nfunction deepMergeWithArray() {\n  for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n    rest[_key] = arguments[_key];\n  }\n\n  return mergeWith(...rest, (x, y) => {\n    if (isArray(x)) {\n      return x.concat(y);\n    }\n  });\n}\n\nmodule.exports = {\n  isFunction,\n  isArray,\n  isString,\n  isBoolean,\n  deepMergeWithArray\n};","map":{"version":3,"sources":["C:/Users/Dell/Desktop/projects/hac-portfolio/node_modules/@craco/craco/lib/utils.js"],"names":["mergeWith","require","isFunction","value","isArray","Array","isString","isBoolean","deepMergeWithArray","rest","x","y","concat","module","exports"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,SAAO,OAAOA,KAAP,KAAiB,UAAxB;AACH;;AAED,SAASC,OAAT,CAAiBD,KAAjB,EAAwB;AACpB,SAAOE,KAAK,CAACD,OAAN,CAAcD,KAAd,CAAP;AACH;;AAED,SAASG,QAAT,CAAkBH,KAAlB,EAAyB;AACrB,SAAO,OAAOA,KAAP,KAAiB,QAAxB;AACH;;AAED,SAASI,SAAT,CAAmBJ,KAAnB,EAA0B;AACtB,SAAO,OAAOA,KAAP,KAAiB,SAAxB;AACH;;AAED,SAASK,kBAAT,GAAqC;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACjC,SAAOT,SAAS,CAAC,GAAGS,IAAJ,EAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChC,QAAIP,OAAO,CAACM,CAAD,CAAX,EAAgB;AACZ,aAAOA,CAAC,CAACE,MAAF,CAASD,CAAT,CAAP;AACH;AACJ,GAJe,CAAhB;AAKH;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACbZ,EAAAA,UADa;AAEbE,EAAAA,OAFa;AAGbE,EAAAA,QAHa;AAIbC,EAAAA,SAJa;AAKbC,EAAAA;AALa,CAAjB","sourcesContent":["const mergeWith = require(\"lodash/mergeWith\");\n\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\n\nfunction isArray(value) {\n    return Array.isArray(value);\n}\n\nfunction isString(value) {\n    return typeof value === \"string\";\n}\n\nfunction isBoolean(value) {\n    return typeof value === \"boolean\";\n}\n\nfunction deepMergeWithArray(...rest) {\n    return mergeWith(...rest, (x, y) => {\n        if (isArray(x)) {\n            return x.concat(y);\n        }\n    });\n}\n\nmodule.exports = {\n    isFunction,\n    isArray,\n    isString,\n    isBoolean,\n    deepMergeWithArray\n};\n"]},"metadata":{},"sourceType":"script"}