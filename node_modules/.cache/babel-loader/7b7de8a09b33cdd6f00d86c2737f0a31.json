{"ast":null,"code":"const {\n  isArray,\n  isFunction\n} = require(\"../utils\");\n\nconst {\n  log\n} = require(\"../logger\");\n/************  Craco Config  *******************/\n\n\nfunction overrideCracoConfig(_ref, cracoConfig, context) {\n  let {\n    plugin,\n    options\n  } = _ref;\n\n  if (isFunction(plugin.overrideCracoConfig)) {\n    const resultingConfig = plugin.overrideCracoConfig({\n      cracoConfig: cracoConfig,\n      pluginOptions: options,\n      context: context\n    });\n\n    if (!resultingConfig) {\n      throw new Error(\"craco: Plugin returned an undefined craco config.\");\n    }\n\n    return resultingConfig;\n  }\n\n  log(\"Overrided craco config with plugin.\");\n  return cracoConfig;\n}\n\nfunction applyCracoConfigPlugins(cracoConfig, context) {\n  if (isArray(cracoConfig.plugins)) {\n    cracoConfig.plugins.forEach(x => {\n      cracoConfig = overrideCracoConfig(x, cracoConfig, context);\n    });\n  }\n\n  log(\"Applied craco config plugins.\");\n  return cracoConfig;\n}\n/************  Webpack Config  *******************/\n\n\nfunction overrideWebpack(_ref2, cracoConfig, webpackConfig, context) {\n  let {\n    plugin,\n    options\n  } = _ref2;\n\n  if (isFunction(plugin.overrideWebpackConfig)) {\n    const resultingConfig = plugin.overrideWebpackConfig({\n      cracoConfig: cracoConfig,\n      webpackConfig: webpackConfig,\n      pluginOptions: options,\n      context: context\n    });\n\n    if (!resultingConfig) {\n      throw new Error(\"craco: Plugin returned an undefined webpack config.\");\n    }\n\n    return resultingConfig;\n  }\n\n  log(\"Overrided webpack config with plugin.\");\n  return webpackConfig;\n}\n\nfunction applyWebpackConfigPlugins(cracoConfig, webpackConfig, context) {\n  if (isArray(cracoConfig.plugins)) {\n    cracoConfig.plugins.forEach(x => {\n      webpackConfig = overrideWebpack(x, cracoConfig, webpackConfig, context);\n    });\n  }\n\n  log(\"Applied webpack config plugins.\");\n  return webpackConfig;\n}\n/************  DevServer Config  *******************/\n\n\nfunction overrideDevServer(_ref3, cracoConfig, devServerConfig, context) {\n  let {\n    plugin,\n    options\n  } = _ref3;\n\n  if (isFunction(plugin.overrideDevServerConfig)) {\n    const resultingConfig = plugin.overrideDevServerConfig({\n      cracoConfig: cracoConfig,\n      devServerConfig: devServerConfig,\n      pluginOptions: options,\n      context: context\n    });\n\n    if (!resultingConfig) {\n      throw new Error(\"craco: Plugin returned an undefined devServer config.\");\n    }\n\n    return resultingConfig;\n  }\n\n  log(\"Overrided devServer config with plugin.\");\n  return devServerConfig;\n}\n\nfunction applyDevServerConfigPlugins(cracoConfig, devServerConfig, context) {\n  if (isArray(cracoConfig.plugins)) {\n    cracoConfig.plugins.forEach(x => {\n      devServerConfig = overrideDevServer(x, cracoConfig, devServerConfig, context);\n    });\n  }\n\n  log(\"Applied devServer config plugins.\");\n  return devServerConfig;\n}\n/************  Jest Config  *******************/\n\n\nfunction overrideJest(_ref4, cracoConfig, jestConfig, context) {\n  let {\n    plugin,\n    options\n  } = _ref4;\n\n  if (isFunction(plugin.overrideJestConfig)) {\n    const resultingConfig = plugin.overrideJestConfig({\n      cracoConfig: cracoConfig,\n      jestConfig: jestConfig,\n      pluginOptions: options,\n      context: context\n    });\n\n    if (!resultingConfig) {\n      throw new Error(\"craco: Plugin returned an undefined Jest config.\");\n    }\n\n    return resultingConfig;\n  }\n\n  log(\"Overrided Jest config with plugin.\");\n  return jestConfig;\n}\n\nfunction applyJestConfigPlugins(cracoConfig, jestConfig, context) {\n  if (isArray(cracoConfig.plugins)) {\n    cracoConfig.plugins.forEach(x => {\n      jestConfig = overrideJest(x, cracoConfig, jestConfig, context);\n    });\n  }\n\n  log(\"Applied Jest config plugins.\");\n  return jestConfig;\n}\n\nmodule.exports = {\n  applyCracoConfigPlugins,\n  applyWebpackConfigPlugins,\n  applyDevServerConfigPlugins,\n  applyJestConfigPlugins\n};","map":{"version":3,"sources":["C:/Users/Dell/Desktop/projects/hac-portfolio/node_modules/@craco/craco/lib/features/plugins.js"],"names":["isArray","isFunction","require","log","overrideCracoConfig","cracoConfig","context","plugin","options","resultingConfig","pluginOptions","Error","applyCracoConfigPlugins","plugins","forEach","x","overrideWebpack","webpackConfig","overrideWebpackConfig","applyWebpackConfigPlugins","overrideDevServer","devServerConfig","overrideDevServerConfig","applyDevServerConfigPlugins","overrideJest","jestConfig","overrideJestConfig","applyJestConfigPlugins","module","exports"],"mappings":"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","sourcesContent":["const { isArray, isFunction } = require(\"../utils\");\nconst { log } = require(\"../logger\");\n\n/************  Craco Config  *******************/\n\nfunction overrideCracoConfig({ plugin, options }, cracoConfig, context) {\n    if (isFunction(plugin.overrideCracoConfig)) {\n        const resultingConfig = plugin.overrideCracoConfig({\n            cracoConfig: cracoConfig,\n            pluginOptions: options,\n            context: context\n        });\n\n        if (!resultingConfig) {\n            throw new Error(\"craco: Plugin returned an undefined craco config.\");\n        }\n\n        return resultingConfig;\n    }\n\n    log(\"Overrided craco config with plugin.\");\n\n    return cracoConfig;\n}\n\nfunction applyCracoConfigPlugins(cracoConfig, context) {\n    if (isArray(cracoConfig.plugins)) {\n        cracoConfig.plugins.forEach(x => {\n            cracoConfig = overrideCracoConfig(x, cracoConfig, context);\n        });\n    }\n\n    log(\"Applied craco config plugins.\");\n\n    return cracoConfig;\n}\n\n/************  Webpack Config  *******************/\n\nfunction overrideWebpack({ plugin, options }, cracoConfig, webpackConfig, context) {\n    if (isFunction(plugin.overrideWebpackConfig)) {\n        const resultingConfig = plugin.overrideWebpackConfig({\n            cracoConfig: cracoConfig,\n            webpackConfig: webpackConfig,\n            pluginOptions: options,\n            context: context\n        });\n\n        if (!resultingConfig) {\n            throw new Error(\"craco: Plugin returned an undefined webpack config.\");\n        }\n\n        return resultingConfig;\n    }\n\n    log(\"Overrided webpack config with plugin.\");\n\n    return webpackConfig;\n}\n\nfunction applyWebpackConfigPlugins(cracoConfig, webpackConfig, context) {\n    if (isArray(cracoConfig.plugins)) {\n        cracoConfig.plugins.forEach(x => {\n            webpackConfig = overrideWebpack(x, cracoConfig, webpackConfig, context);\n        });\n    }\n\n    log(\"Applied webpack config plugins.\");\n\n    return webpackConfig;\n}\n\n/************  DevServer Config  *******************/\n\nfunction overrideDevServer({ plugin, options }, cracoConfig, devServerConfig, context) {\n    if (isFunction(plugin.overrideDevServerConfig)) {\n        const resultingConfig = plugin.overrideDevServerConfig({\n            cracoConfig: cracoConfig,\n            devServerConfig: devServerConfig,\n            pluginOptions: options,\n            context: context\n        });\n\n        if (!resultingConfig) {\n            throw new Error(\"craco: Plugin returned an undefined devServer config.\");\n        }\n\n        return resultingConfig;\n    }\n\n    log(\"Overrided devServer config with plugin.\");\n\n    return devServerConfig;\n}\n\nfunction applyDevServerConfigPlugins(cracoConfig, devServerConfig, context) {\n    if (isArray(cracoConfig.plugins)) {\n        cracoConfig.plugins.forEach(x => {\n            devServerConfig = overrideDevServer(x, cracoConfig, devServerConfig, context);\n        });\n    }\n\n    log(\"Applied devServer config plugins.\");\n\n    return devServerConfig;\n}\n\n/************  Jest Config  *******************/\n\nfunction overrideJest({ plugin, options }, cracoConfig, jestConfig, context) {\n    if (isFunction(plugin.overrideJestConfig)) {\n        const resultingConfig = plugin.overrideJestConfig({\n            cracoConfig: cracoConfig,\n            jestConfig: jestConfig,\n            pluginOptions: options,\n            context: context\n        });\n\n        if (!resultingConfig) {\n            throw new Error(\"craco: Plugin returned an undefined Jest config.\");\n        }\n\n        return resultingConfig;\n    }\n\n    log(\"Overrided Jest config with plugin.\");\n\n    return jestConfig;\n}\n\nfunction applyJestConfigPlugins(cracoConfig, jestConfig, context) {\n    if (isArray(cracoConfig.plugins)) {\n        cracoConfig.plugins.forEach(x => {\n            jestConfig = overrideJest(x, cracoConfig, jestConfig, context);\n        });\n    }\n\n    log(\"Applied Jest config plugins.\");\n\n    return jestConfig;\n}\n\nmodule.exports = {\n    applyCracoConfigPlugins,\n    applyWebpackConfigPlugins,\n    applyDevServerConfigPlugins,\n    applyJestConfigPlugins\n};\n"]},"metadata":{},"sourceType":"script"}